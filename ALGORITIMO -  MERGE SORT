
#include <stdio.h>
void imprimir_array(int array[], int n)
{
    for(int k = 0; k < n; k++){
        printf("%d ", array[k]);
    }
    printf("\n");
}

void merge(int arr[], int l, int m, int r){
     //printf("merge \n, l: %d, r:%d m: %d\n", l, r, m);
    int i,j,k;
    int n1 = m - l + 1;
    int n2 = r-m;
    
    int L[n1], R[n2];
    
    for(i = 0; i< n1; i++){
        L[i] = arr[l+ i];
    }
    for(j = 0; j< n2; j++){
        R[j] = arr[m + 1 +j ];
    }
    
    i = 0;
    j = 0;
    k = l;
    
    while(i < n1 && j < n2){
        if(L[i] <= R[j]){
            arr[k] = L[i];
            i++;
        }
        else{
            arr[k] = R[j];
            j++;
        }
        k++;
    }
    while(i < n1){
        arr[k] = L[i];
        i++;
        k++;
    }
    while(j < n2){
        arr[k] = R[j];
        j++;
        k++;
    }
    
    imprimir_array(arr, 6);
    
}

void mergeSort(int arr[], int l, int r){
    imprimir_array(arr, r -l +1);
    if( l < r){
        int m =l + (r -l) / 2;
        //printf("l: %d, r:%d m: %d\n", l, r, m);
        
        mergeSort(arr, l, m);
        mergeSort(arr, m+1, r);
        
        merge(arr, l, m, r);
    }
    
}

int main()
{
    int tamanho = 6;
    int array[] = {8, -8, 64, -20, 3, 1};
    
    mergeSort(array, 0, 5);
    
    

    return 0;
}
